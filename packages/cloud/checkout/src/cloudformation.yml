AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Parameters:
  LambdaS3Bucket:
    Type: String

  LambdaS3Key:
    Type: String

  LambdaS3Version:
    Type: String

Globals:
  Api:
    Auth:
      ApiKeyRequired: false
  Function:
    CodeUri:
      Bucket: !Ref LambdaS3Bucket
      Key: !Ref LambdaS3Key
      Version: !Ref LambdaS3Version
    Runtime: nodejs12.x

Resources:
  ApiV1ServerlessApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1

  ApiV1ServerlessFunctionIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /

  ApiV1ServerlessFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: ANY
            Path: /{proxy+}
            RestApiId: !Ref ApiV1ServerlessApi
      Handler: index.proxyHandler
      Role: !GetAtt ApiV1ServerlessFunctionIAMRole.Arn
      Timeout: 600

Outputs:
  ApiV1Endpoint:
    Description: 'API v1 stage endpoint.'
    Value: !Sub 'https://${ApiV1ServerlessApi}.execute-api.${AWS::Region}.amazonaws.com/v1/'
